version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
      - ./scripts:/scripts
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    stop_grace_period: 1m
    stop_signal: SIGTERM
    command: |
      bash -c '
        chmod +x /scripts/backup_db.sh
        docker-entrypoint.sh postgres &
        trap "/scripts/backup_db.sh; exit 0" SIGTERM
        wait $!'
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  bot:
    build: .
    command: python -m src.bot.main
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
      - ADMIN_ROLE_ID=${ADMIN_ROLE_ID}
      - OFFICER_ROLE_ID=${OFFICER_ROLE_ID}
      - CLAN1_ROLE_ID=${CLAN1_ROLE_ID}
      - CLAN2_ROLE_ID=${CLAN2_ROLE_ID}
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  api:
    build: .
    command: python -m src.api.run
    volumes:
      - .:/app
      - ./ssl:/app/ssl:ro
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - API_PORT=${API_PORT}
      - SSL_KEYFILE=${SSL_KEYFILE}
      - SSL_CERTFILE=${SSL_CERTFILE}
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  activity_tracker:
    build:
      context: .
      dockerfile: Dockerfile.activity_tracker
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
      - RAIDHELPER_SERVER_ID=${RAIDHELPER_SERVER_ID}
      - GOOGLE_SHEET_ID=${GOOGLE_SHEET_ID}
    env_file:
      - .env
    volumes:
      - .:/app
      - ./credentials.json:/app/credentials.json:ro
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data: 